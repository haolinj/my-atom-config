'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monitors = undefined;
exports.default = getMonitor;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduxDevtoolsLogMonitor = require('redux-devtools-log-monitor');

var _reduxDevtoolsLogMonitor2 = _interopRequireDefault(_reduxDevtoolsLogMonitor);

var _reduxDevtoolsInspector = require('redux-devtools-inspector');

var _reduxDevtoolsInspector2 = _interopRequireDefault(_reduxDevtoolsInspector);

var _reduxDevtoolsChartMonitor = require('redux-devtools-chart-monitor');

var _reduxDevtoolsChartMonitor2 = _interopRequireDefault(_reduxDevtoolsChartMonitor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var monitors = exports.monitors = [{ key: 'LogMonitor', title: 'Log monitor' }, { key: 'InspectorMonitor', title: 'Inspector' }, { key: 'ChartMonitor', title: 'Chart' }];

function getMonitor(_ref) {
  var monitor = _ref.monitor;
  var testComponent = _ref.testComponent;

  switch (monitor) {
    case 'LogMonitor':
      return _react2.default.createElement(_reduxDevtoolsLogMonitor2.default, { preserveScrollTop: false });
    case 'SliderMonitor':
      return _react2.default.createElement('div', null); // deprecated
    case 'ChartMonitor':
      return (0, _react.createElement)(_reduxDevtoolsChartMonitor2.default, {
        defaultIsVisible: true, invertTheme: true,
        tooltipOptions: {
          style: {
            'background-color': '#ffffff',
            'color': '#000000',
            'opacity': '0.9',
            'border-radius': '5px',
            'padding': '5px'
          }
        }
      });
    default:
      var tabs = void 0;
      if (testComponent) {
        tabs = function tabs(defaultTabs) {
          return [].concat(_toConsumableArray(defaultTabs), [{ name: 'Test', component: testComponent }]);
        };
      }
      return (0, _react.createElement)(_reduxDevtoolsInspector2.default, {
        shouldPersistState: false, invertTheme: false, theme: 'nicinabox', tabs: tabs
      });
  }
}